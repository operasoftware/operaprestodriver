// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cookie_manager.proto

package com.opera.core.systems.scope.protos;

public final class CookieMngProtos {

  private CookieMngProtos() {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }

  public static final class Cookie extends com.google.protobuf.GeneratedMessage {

    // Use Cookie.newBuilder() to construct.
    private Cookie() {
      initFields();
    }

    private Cookie(boolean noInit) {
    }

    private static final Cookie defaultInstance;

    public static Cookie getDefaultInstance() {
      return defaultInstance;
    }

    public Cookie getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_Cookie_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_Cookie_fieldAccessorTable;
    }

    // required string domain = 1;
    public static final int DOMAIN_FIELD_NUMBER = 1;
    private boolean hasDomain;
    private java.lang.String domain_ = "";

    public boolean hasDomain() {
      return hasDomain;
    }

    public java.lang.String getDomain() {
      return domain_;
    }

    // required string path = 2;
    public static final int PATH_FIELD_NUMBER = 2;
    private boolean hasPath;
    private java.lang.String path_ = "";

    public boolean hasPath() {
      return hasPath;
    }

    public java.lang.String getPath() {
      return path_;
    }

    // required string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private boolean hasName;
    private java.lang.String name_ = "";

    public boolean hasName() {
      return hasName;
    }

    public java.lang.String getName() {
      return name_;
    }

    // required string value = 4;
    public static final int VALUE_FIELD_NUMBER = 4;
    private boolean hasValue;
    private java.lang.String value_ = "";

    public boolean hasValue() {
      return hasValue;
    }

    public java.lang.String getValue() {
      return value_;
    }

    // required uint32 expires = 5;
    public static final int EXPIRES_FIELD_NUMBER = 5;
    private boolean hasExpires;
    private int expires_ = 0;

    public boolean hasExpires() {
      return hasExpires;
    }

    public int getExpires() {
      return expires_;
    }

    // required bool isSecure = 6;
    public static final int ISSECURE_FIELD_NUMBER = 6;
    private boolean hasIsSecure;
    private boolean isSecure_ = false;

    public boolean hasIsSecure() {
      return hasIsSecure;
    }

    public boolean getIsSecure() {
      return isSecure_;
    }

    // required bool isHTTPOnly = 7;
    public static final int ISHTTPONLY_FIELD_NUMBER = 7;
    private boolean hasIsHTTPOnly;
    private boolean isHTTPOnly_ = false;

    public boolean hasIsHTTPOnly() {
      return hasIsHTTPOnly;
    }

    public boolean getIsHTTPOnly() {
      return isHTTPOnly_;
    }

    private void initFields() {
    }

    public final boolean isInitialized() {
      if (!hasDomain) {
        return false;
      }
      if (!hasPath) {
        return false;
      }
      if (!hasName) {
        return false;
      }
      if (!hasValue) {
        return false;
      }
      if (!hasExpires) {
        return false;
      }
      if (!hasIsSecure) {
        return false;
      }
      if (!hasIsHTTPOnly) {
        return false;
      }
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (hasDomain()) {
        output.writeString(1, getDomain());
      }
      if (hasPath()) {
        output.writeString(2, getPath());
      }
      if (hasName()) {
        output.writeString(3, getName());
      }
      if (hasValue()) {
        output.writeString(4, getValue());
      }
      if (hasExpires()) {
        output.writeUInt32(5, getExpires());
      }
      if (hasIsSecure()) {
        output.writeBool(6, getIsSecure());
      }
      if (hasIsHTTPOnly()) {
        output.writeBool(7, getIsHTTPOnly());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasDomain()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(1,
                                                                        getDomain());
      }
      if (hasPath()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2,
                                                                        getPath());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(3,
                                                                        getName());
      }
      if (hasValue()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(4,
                                                                        getValue());
      }
      if (hasExpires()) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(5,
                                                                        getExpires());
      }
      if (hasIsSecure()) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(6,
                                                                      getIsSecure());
      }
      if (hasIsHTTPOnly()) {
        size += com.google.protobuf.CodedOutputStream.computeBoolSize(7,
                                                                      getIsHTTPOnly());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.Cookie parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.opera.core.systems.scope.protos.CookieMngProtos.Cookie prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessage.Builder<Builder> {

      private com.opera.core.systems.scope.protos.CookieMngProtos.Cookie result;

      // Construct using
      // com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.newBuilder()
      private Builder() {
      }

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.CookieMngProtos.Cookie();
        return builder;
      }

      protected com.opera.core.systems.scope.protos.CookieMngProtos.Cookie internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException("Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.CookieMngProtos.Cookie();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.getDescriptor();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.Cookie getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.Cookie build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private com.opera.core.systems.scope.protos.CookieMngProtos.Cookie buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.Cookie buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
              "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.CookieMngProtos.Cookie returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.CookieMngProtos.Cookie) {
          return mergeFrom((com.opera.core.systems.scope.protos.CookieMngProtos.Cookie) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.opera.core.systems.scope.protos.CookieMngProtos.Cookie other) {
        if (other == com.opera.core.systems.scope.protos.CookieMngProtos.Cookie
            .getDefaultInstance()) {
          return this;
        }
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        if (other.hasPath()) {
          setPath(other.getPath());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasValue()) {
          setValue(other.getValue());
        }
        if (other.hasExpires()) {
          setExpires(other.getExpires());
        }
        if (other.hasIsSecure()) {
          setIsSecure(other.getIsSecure());
        }
        if (other.hasIsHTTPOnly()) {
          setIsHTTPOnly(other.getIsHTTPOnly());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                               com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder
            unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setDomain(input.readString());
              break;
            }
            case 18: {
              setPath(input.readString());
              break;
            }
            case 26: {
              setName(input.readString());
              break;
            }
            case 34: {
              setValue(input.readString());
              break;
            }
            case 40: {
              setExpires(input.readUInt32());
              break;
            }
            case 48: {
              setIsSecure(input.readBool());
              break;
            }
            case 56: {
              setIsHTTPOnly(input.readBool());
              break;
            }
          }
        }
      }

      // required string domain = 1;
      public boolean hasDomain() {
        return result.hasDomain();
      }

      public java.lang.String getDomain() {
        return result.getDomain();
      }

      public Builder setDomain(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDomain = true;
        result.domain_ = value;
        return this;
      }

      public Builder clearDomain() {
        result.hasDomain = false;
        result.domain_ = getDefaultInstance().getDomain();
        return this;
      }

      // required string path = 2;
      public boolean hasPath() {
        return result.hasPath();
      }

      public java.lang.String getPath() {
        return result.getPath();
      }

      public Builder setPath(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPath = true;
        result.path_ = value;
        return this;
      }

      public Builder clearPath() {
        result.hasPath = false;
        result.path_ = getDefaultInstance().getPath();
        return this;
      }

      // required string name = 3;
      public boolean hasName() {
        return result.hasName();
      }

      public java.lang.String getName() {
        return result.getName();
      }

      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasName = true;
        result.name_ = value;
        return this;
      }

      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // required string value = 4;
      public boolean hasValue() {
        return result.hasValue();
      }

      public java.lang.String getValue() {
        return result.getValue();
      }

      public Builder setValue(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasValue = true;
        result.value_ = value;
        return this;
      }

      public Builder clearValue() {
        result.hasValue = false;
        result.value_ = getDefaultInstance().getValue();
        return this;
      }

      // required uint32 expires = 5;
      public boolean hasExpires() {
        return result.hasExpires();
      }

      public int getExpires() {
        return result.getExpires();
      }

      public Builder setExpires(int value) {
        result.hasExpires = true;
        result.expires_ = value;
        return this;
      }

      public Builder clearExpires() {
        result.hasExpires = false;
        result.expires_ = 0;
        return this;
      }

      // required bool isSecure = 6;
      public boolean hasIsSecure() {
        return result.hasIsSecure();
      }

      public boolean getIsSecure() {
        return result.getIsSecure();
      }

      public Builder setIsSecure(boolean value) {
        result.hasIsSecure = true;
        result.isSecure_ = value;
        return this;
      }

      public Builder clearIsSecure() {
        result.hasIsSecure = false;
        result.isSecure_ = false;
        return this;
      }

      // required bool isHTTPOnly = 7;
      public boolean hasIsHTTPOnly() {
        return result.hasIsHTTPOnly();
      }

      public boolean getIsHTTPOnly() {
        return result.getIsHTTPOnly();
      }

      public Builder setIsHTTPOnly(boolean value) {
        result.hasIsHTTPOnly = true;
        result.isHTTPOnly_ = value;
        return this;
      }

      public Builder clearIsHTTPOnly() {
        result.hasIsHTTPOnly = false;
        result.isHTTPOnly_ = false;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scope.Cookie)
    }

    static {
      defaultInstance = new Cookie(true);
      com.opera.core.systems.scope.protos.CookieMngProtos.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scope.Cookie)
  }

  public static final class CookieList extends
                                       com.google.protobuf.GeneratedMessage {

    // Use CookieList.newBuilder() to construct.
    private CookieList() {
      initFields();
    }

    private CookieList(boolean noInit) {
    }

    private static final CookieList defaultInstance;

    public static CookieList getDefaultInstance() {
      return defaultInstance;
    }

    public CookieList getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_CookieList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_CookieList_fieldAccessorTable;
    }

    // repeated .scope.Cookie cookieList = 1;
    public static final int COOKIELIST_FIELD_NUMBER = 1;
    private
    java.util.List<com.opera.core.systems.scope.protos.CookieMngProtos.Cookie>
        cookieList_ =
        java.util.Collections.emptyList();

    public java.util.List<com.opera.core.systems.scope.protos.CookieMngProtos.Cookie> getCookieListList() {
      return cookieList_;
    }

    public int getCookieListCount() {
      return cookieList_.size();
    }

    public com.opera.core.systems.scope.protos.CookieMngProtos.Cookie getCookieList(
        int index) {
      return cookieList_.get(index);
    }

    private void initFields() {
    }

    public final boolean isInitialized() {
      for (com.opera.core.systems.scope.protos.CookieMngProtos.Cookie element : getCookieListList()) {
        if (!element.isInitialized()) {
          return false;
        }
      }
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      for (com.opera.core.systems.scope.protos.CookieMngProtos.Cookie element : getCookieListList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      for (com.opera.core.systems.scope.protos.CookieMngProtos.Cookie element : getCookieListList()) {
        size += com.google.protobuf.CodedOutputStream.computeMessageSize(1,
                                                                         element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.opera.core.systems.scope.protos.CookieMngProtos.CookieList prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessage.Builder<Builder> {

      private com.opera.core.systems.scope.protos.CookieMngProtos.CookieList result;

      // Construct using
      // com.opera.core.systems.scope.protos.CookieMngProtos.CookieList.newBuilder()
      private Builder() {
      }

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.CookieMngProtos.CookieList();
        return builder;
      }

      protected com.opera.core.systems.scope.protos.CookieMngProtos.CookieList internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException("Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.CookieMngProtos.CookieList();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.CookieList.getDescriptor();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.CookieList getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.CookieList.getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.CookieList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private com.opera.core.systems.scope.protos.CookieMngProtos.CookieList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.CookieList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
              "build() has already been called on this Builder.");
        }
        if (result.cookieList_ != java.util.Collections.EMPTY_LIST) {
          result.cookieList_ = java.util.Collections.unmodifiableList(result.cookieList_);
        }
        com.opera.core.systems.scope.protos.CookieMngProtos.CookieList returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.CookieMngProtos.CookieList) {
          return mergeFrom((com.opera.core.systems.scope.protos.CookieMngProtos.CookieList) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.opera.core.systems.scope.protos.CookieMngProtos.CookieList other) {
        if (other == com.opera.core.systems.scope.protos.CookieMngProtos.CookieList
            .getDefaultInstance()) {
          return this;
        }
        if (!other.cookieList_.isEmpty()) {
          if (result.cookieList_.isEmpty()) {
            result.cookieList_ =
                new java.util.ArrayList<com.opera.core.systems.scope.protos.CookieMngProtos.Cookie>();
          }
          result.cookieList_.addAll(other.cookieList_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                               com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder
            unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.Builder
                  subBuilder =
                  com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCookieList(subBuilder.buildPartial());
              break;
            }
          }
        }
      }

      // repeated .scope.Cookie cookieList = 1;
      public java.util.List<com.opera.core.systems.scope.protos.CookieMngProtos.Cookie> getCookieListList() {
        return java.util.Collections.unmodifiableList(result.cookieList_);
      }

      public int getCookieListCount() {
        return result.getCookieListCount();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.Cookie getCookieList(
          int index) {
        return result.getCookieList(index);
      }

      public Builder setCookieList(int index,
                                   com.opera.core.systems.scope.protos.CookieMngProtos.Cookie value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.cookieList_.set(index, value);
        return this;
      }

      public Builder setCookieList(
          int index,
          com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.Builder builderForValue) {
        result.cookieList_.set(index, builderForValue.build());
        return this;
      }

      public Builder addCookieList(
          com.opera.core.systems.scope.protos.CookieMngProtos.Cookie value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.cookieList_.isEmpty()) {
          result.cookieList_ =
              new java.util.ArrayList<com.opera.core.systems.scope.protos.CookieMngProtos.Cookie>();
        }
        result.cookieList_.add(value);
        return this;
      }

      public Builder addCookieList(
          com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.Builder builderForValue) {
        if (result.cookieList_.isEmpty()) {
          result.cookieList_ =
              new java.util.ArrayList<com.opera.core.systems.scope.protos.CookieMngProtos.Cookie>();
        }
        result.cookieList_.add(builderForValue.build());
        return this;
      }

      public Builder addAllCookieList(
          java.lang.Iterable<? extends com.opera.core.systems.scope.protos.CookieMngProtos.Cookie> values) {
        if (result.cookieList_.isEmpty()) {
          result.cookieList_ =
              new java.util.ArrayList<com.opera.core.systems.scope.protos.CookieMngProtos.Cookie>();
        }
        super.addAll(values, result.cookieList_);
        return this;
      }

      public Builder clearCookieList() {
        result.cookieList_ = java.util.Collections.emptyList();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scope.CookieList)
    }

    static {
      defaultInstance = new CookieList(true);
      com.opera.core.systems.scope.protos.CookieMngProtos.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scope.CookieList)
  }

  public static final class GetCookieArg extends
                                         com.google.protobuf.GeneratedMessage {

    // Use GetCookieArg.newBuilder() to construct.
    private GetCookieArg() {
      initFields();
    }

    private GetCookieArg(boolean noInit) {
    }

    private static final GetCookieArg defaultInstance;

    public static GetCookieArg getDefaultInstance() {
      return defaultInstance;
    }

    public GetCookieArg getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_GetCookieArg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_GetCookieArg_fieldAccessorTable;
    }

    // required string domain = 1;
    public static final int DOMAIN_FIELD_NUMBER = 1;
    private boolean hasDomain;
    private java.lang.String domain_ = "";

    public boolean hasDomain() {
      return hasDomain;
    }

    public java.lang.String getDomain() {
      return domain_;
    }

    // optional string path = 2;
    public static final int PATH_FIELD_NUMBER = 2;
    private boolean hasPath;
    private java.lang.String path_ = "";

    public boolean hasPath() {
      return hasPath;
    }

    public java.lang.String getPath() {
      return path_;
    }

    private void initFields() {
    }

    public final boolean isInitialized() {
      if (!hasDomain) {
        return false;
      }
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (hasDomain()) {
        output.writeString(1, getDomain());
      }
      if (hasPath()) {
        output.writeString(2, getPath());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasDomain()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(1,
                                                                        getDomain());
      }
      if (hasPath()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2,
                                                                        getPath());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessage.Builder<Builder> {

      private com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg result;

      // Construct using
      // com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg.newBuilder()
      private Builder() {
      }

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg();
        return builder;
      }

      protected com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException("Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg.getDescriptor();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg
            .getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
              "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg) {
          return mergeFrom(
              (com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg other) {
        if (other == com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg
            .getDefaultInstance()) {
          return this;
        }
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        if (other.hasPath()) {
          setPath(other.getPath());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                               com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder
            unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setDomain(input.readString());
              break;
            }
            case 18: {
              setPath(input.readString());
              break;
            }
          }
        }
      }

      // required string domain = 1;
      public boolean hasDomain() {
        return result.hasDomain();
      }

      public java.lang.String getDomain() {
        return result.getDomain();
      }

      public Builder setDomain(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDomain = true;
        result.domain_ = value;
        return this;
      }

      public Builder clearDomain() {
        result.hasDomain = false;
        result.domain_ = getDefaultInstance().getDomain();
        return this;
      }

      // optional string path = 2;
      public boolean hasPath() {
        return result.hasPath();
      }

      public java.lang.String getPath() {
        return result.getPath();
      }

      public Builder setPath(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPath = true;
        result.path_ = value;
        return this;
      }

      public Builder clearPath() {
        result.hasPath = false;
        result.path_ = getDefaultInstance().getPath();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scope.GetCookieArg)
    }

    static {
      defaultInstance = new GetCookieArg(true);
      com.opera.core.systems.scope.protos.CookieMngProtos.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scope.GetCookieArg)
  }

  public static final class RemoveCookieArg extends
                                            com.google.protobuf.GeneratedMessage {

    // Use RemoveCookieArg.newBuilder() to construct.
    private RemoveCookieArg() {
      initFields();
    }

    private RemoveCookieArg(boolean noInit) {
    }

    private static final RemoveCookieArg defaultInstance;

    public static RemoveCookieArg getDefaultInstance() {
      return defaultInstance;
    }

    public RemoveCookieArg getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_RemoveCookieArg_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_RemoveCookieArg_fieldAccessorTable;
    }

    // required string domain = 1;
    public static final int DOMAIN_FIELD_NUMBER = 1;
    private boolean hasDomain;
    private java.lang.String domain_ = "";

    public boolean hasDomain() {
      return hasDomain;
    }

    public java.lang.String getDomain() {
      return domain_;
    }

    // optional string path = 2;
    public static final int PATH_FIELD_NUMBER = 2;
    private boolean hasPath;
    private java.lang.String path_ = "";

    public boolean hasPath() {
      return hasPath;
    }

    public java.lang.String getPath() {
      return path_;
    }

    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private boolean hasName;
    private java.lang.String name_ = "";

    public boolean hasName() {
      return hasName;
    }

    public java.lang.String getName() {
      return name_;
    }

    private void initFields() {
    }

    public final boolean isInitialized() {
      if (!hasDomain) {
        return false;
      }
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (hasDomain()) {
        output.writeString(1, getDomain());
      }
      if (hasPath()) {
        output.writeString(2, getPath());
      }
      if (hasName()) {
        output.writeString(3, getName());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasDomain()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(1,
                                                                        getDomain());
      }
      if (hasPath()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(2,
                                                                        getPath());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(3,
                                                                        getName());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessage.Builder<Builder> {

      private com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg result;

      // Construct using
      // com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg.newBuilder()
      private Builder() {
      }

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg();
        return builder;
      }

      protected com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException("Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg.getDescriptor();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg
            .getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
              "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg) {
          return mergeFrom(
              (com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg other) {
        if (other == com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg
            .getDefaultInstance()) {
          return this;
        }
        if (other.hasDomain()) {
          setDomain(other.getDomain());
        }
        if (other.hasPath()) {
          setPath(other.getPath());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                               com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder
            unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setDomain(input.readString());
              break;
            }
            case 18: {
              setPath(input.readString());
              break;
            }
            case 26: {
              setName(input.readString());
              break;
            }
          }
        }
      }

      // required string domain = 1;
      public boolean hasDomain() {
        return result.hasDomain();
      }

      public java.lang.String getDomain() {
        return result.getDomain();
      }

      public Builder setDomain(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDomain = true;
        result.domain_ = value;
        return this;
      }

      public Builder clearDomain() {
        result.hasDomain = false;
        result.domain_ = getDefaultInstance().getDomain();
        return this;
      }

      // optional string path = 2;
      public boolean hasPath() {
        return result.hasPath();
      }

      public java.lang.String getPath() {
        return result.getPath();
      }

      public Builder setPath(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPath = true;
        result.path_ = value;
        return this;
      }

      public Builder clearPath() {
        result.hasPath = false;
        result.path_ = getDefaultInstance().getPath();
        return this;
      }

      // optional string name = 3;
      public boolean hasName() {
        return result.hasName();
      }

      public java.lang.String getName() {
        return result.getName();
      }

      public Builder setName(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasName = true;
        result.name_ = value;
        return this;
      }

      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scope.RemoveCookieArg)
    }

    static {
      defaultInstance = new RemoveCookieArg(true);
      com.opera.core.systems.scope.protos.CookieMngProtos.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scope.RemoveCookieArg)
  }

  public static final class CookieSettings extends
                                           com.google.protobuf.GeneratedMessage {

    // Use CookieSettings.newBuilder() to construct.
    private CookieSettings() {
      initFields();
    }

    private CookieSettings(boolean noInit) {
    }

    private static final CookieSettings defaultInstance;

    public static CookieSettings getDefaultInstance() {
      return defaultInstance;
    }

    public CookieSettings getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_CookieSettings_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.CookieMngProtos.internal_static_scope_CookieSettings_fieldAccessorTable;
    }

    // required uint32 maxCookies = 1;
    public static final int MAXCOOKIES_FIELD_NUMBER = 1;
    private boolean hasMaxCookies;
    private int maxCookies_ = 0;

    public boolean hasMaxCookies() {
      return hasMaxCookies;
    }

    public int getMaxCookies() {
      return maxCookies_;
    }

    // required uint32 maxCookiesPerDomain = 2;
    public static final int MAXCOOKIESPERDOMAIN_FIELD_NUMBER = 2;
    private boolean hasMaxCookiesPerDomain;
    private int maxCookiesPerDomain_ = 0;

    public boolean hasMaxCookiesPerDomain() {
      return hasMaxCookiesPerDomain;
    }

    public int getMaxCookiesPerDomain() {
      return maxCookiesPerDomain_;
    }

    // required uint32 maxCookieLength = 3;
    public static final int MAXCOOKIELENGTH_FIELD_NUMBER = 3;
    private boolean hasMaxCookieLength;
    private int maxCookieLength_ = 0;

    public boolean hasMaxCookieLength() {
      return hasMaxCookieLength;
    }

    public int getMaxCookieLength() {
      return maxCookieLength_;
    }

    private void initFields() {
    }

    public final boolean isInitialized() {
      if (!hasMaxCookies) {
        return false;
      }
      if (!hasMaxCookiesPerDomain) {
        return false;
      }
      if (!hasMaxCookieLength) {
        return false;
      }
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (hasMaxCookies()) {
        output.writeUInt32(1, getMaxCookies());
      }
      if (hasMaxCookiesPerDomain()) {
        output.writeUInt32(2, getMaxCookiesPerDomain());
      }
      if (hasMaxCookieLength()) {
        output.writeUInt32(3, getMaxCookieLength());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasMaxCookies()) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(1,
                                                                        getMaxCookies());
      }
      if (hasMaxCookiesPerDomain()) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(2,
                                                                        getMaxCookiesPerDomain());
      }
      if (hasMaxCookieLength()) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(3,
                                                                        getMaxCookieLength());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessage.Builder<Builder> {

      private com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings result;

      // Construct using
      // com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings.newBuilder()
      private Builder() {
      }

      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings();
        return builder;
      }

      protected com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException("Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings.getDescriptor();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings
            .getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
              "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings) {
          return mergeFrom(
              (com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings other) {
        if (other == com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings
            .getDefaultInstance()) {
          return this;
        }
        if (other.hasMaxCookies()) {
          setMaxCookies(other.getMaxCookies());
        }
        if (other.hasMaxCookiesPerDomain()) {
          setMaxCookiesPerDomain(other.getMaxCookiesPerDomain());
        }
        if (other.hasMaxCookieLength()) {
          setMaxCookieLength(other.getMaxCookieLength());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                               com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder
            unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMaxCookies(input.readUInt32());
              break;
            }
            case 16: {
              setMaxCookiesPerDomain(input.readUInt32());
              break;
            }
            case 24: {
              setMaxCookieLength(input.readUInt32());
              break;
            }
          }
        }
      }

      // required uint32 maxCookies = 1;
      public boolean hasMaxCookies() {
        return result.hasMaxCookies();
      }

      public int getMaxCookies() {
        return result.getMaxCookies();
      }

      public Builder setMaxCookies(int value) {
        result.hasMaxCookies = true;
        result.maxCookies_ = value;
        return this;
      }

      public Builder clearMaxCookies() {
        result.hasMaxCookies = false;
        result.maxCookies_ = 0;
        return this;
      }

      // required uint32 maxCookiesPerDomain = 2;
      public boolean hasMaxCookiesPerDomain() {
        return result.hasMaxCookiesPerDomain();
      }

      public int getMaxCookiesPerDomain() {
        return result.getMaxCookiesPerDomain();
      }

      public Builder setMaxCookiesPerDomain(int value) {
        result.hasMaxCookiesPerDomain = true;
        result.maxCookiesPerDomain_ = value;
        return this;
      }

      public Builder clearMaxCookiesPerDomain() {
        result.hasMaxCookiesPerDomain = false;
        result.maxCookiesPerDomain_ = 0;
        return this;
      }

      // required uint32 maxCookieLength = 3;
      public boolean hasMaxCookieLength() {
        return result.hasMaxCookieLength();
      }

      public int getMaxCookieLength() {
        return result.getMaxCookieLength();
      }

      public Builder setMaxCookieLength(int value) {
        result.hasMaxCookieLength = true;
        result.maxCookieLength_ = value;
        return this;
      }

      public Builder clearMaxCookieLength() {
        result.hasMaxCookieLength = false;
        result.maxCookieLength_ = 0;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scope.CookieSettings)
    }

    static {
      defaultInstance = new CookieSettings(true);
      com.opera.core.systems.scope.protos.CookieMngProtos.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scope.CookieSettings)
  }

  private static com.google.protobuf.Descriptors.Descriptor internal_static_scope_Cookie_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_Cookie_fieldAccessorTable;
  private static
  com.google.protobuf.Descriptors.Descriptor
      internal_static_scope_CookieList_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_CookieList_fieldAccessorTable;
  private static
  com.google.protobuf.Descriptors.Descriptor
      internal_static_scope_GetCookieArg_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_GetCookieArg_fieldAccessorTable;
  private static
  com.google.protobuf.Descriptors.Descriptor
      internal_static_scope_RemoveCookieArg_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_RemoveCookieArg_fieldAccessorTable;
  private static
  com.google.protobuf.Descriptors.Descriptor
      internal_static_scope_CookieSettings_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_CookieSettings_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
        "\n\024cookie_manager.proto\022\005scope\"z\n\006Cookie\022"
        + "\016\n\006domain\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\022\014\n\004name\030\003 "
        + "\002(\t\022\r\n\005value\030\004 \002(\t\022\017\n\007expires\030\005 \002(\r\022\020\n\010i"
        + "sSecure\030\006 \002(\010\022\022\n\nisHTTPOnly\030\007 \002(\010\"/\n\nCoo"
        + "kieList\022!\n\ncookieList\030\001 \003(\0132\r.scope.Cook"
        + "ie\",\n\014GetCookieArg\022\016\n\006domain\030\001 \002(\t\022\014\n\004pa"
        + "th\030\002 \001(\t\"=\n\017RemoveCookieArg\022\016\n\006domain\030\001 "
        + "\002(\t\022\014\n\004path\030\002 \001(\t\022\014\n\004name\030\003 \001(\t\"Z\n\016Cooki"
        + "eSettings\022\022\n\nmaxCookies\030\001 \002(\r\022\033\n\023maxCook"
        + "iesPerDomain\030\002 \002(\r\022\027\n\017maxCookieLength\030\003 ",
        "\002(\rB8\n#com.opera.core.systems.scope.prot"
        + "osB\017CookieMngProtosH\001"};
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner
        assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            internal_static_scope_Cookie_descriptor = getDescriptor().getMessageTypes().get(
                0);
            internal_static_scope_Cookie_fieldAccessorTable =
                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                    internal_static_scope_Cookie_descriptor,
                    new java.lang.String[]{"Domain", "Path", "Name", "Value",
                                           "Expires", "IsSecure", "IsHTTPOnly",},
                    com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.class,
                    com.opera.core.systems.scope.protos.CookieMngProtos.Cookie.Builder.class);
            internal_static_scope_CookieList_descriptor = getDescriptor().getMessageTypes().get(
                1);
            internal_static_scope_CookieList_fieldAccessorTable =
                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                    internal_static_scope_CookieList_descriptor,
                    new java.lang.String[]{"CookieList",},
                    com.opera.core.systems.scope.protos.CookieMngProtos.CookieList.class,
                    com.opera.core.systems.scope.protos.CookieMngProtos.CookieList.Builder.class);
            internal_static_scope_GetCookieArg_descriptor = getDescriptor().getMessageTypes().get(
                2);
            internal_static_scope_GetCookieArg_fieldAccessorTable =
                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                    internal_static_scope_GetCookieArg_descriptor,
                    new java.lang.String[]{"Domain", "Path",},
                    com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg.class,
                    com.opera.core.systems.scope.protos.CookieMngProtos.GetCookieArg.Builder.class);
            internal_static_scope_RemoveCookieArg_descriptor =
                getDescriptor().getMessageTypes().get(
                    3);
            internal_static_scope_RemoveCookieArg_fieldAccessorTable =
                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                    internal_static_scope_RemoveCookieArg_descriptor,
                    new java.lang.String[]{"Domain", "Path", "Name",},
                    com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg.class,
                    com.opera.core.systems.scope.protos.CookieMngProtos.RemoveCookieArg.Builder.class);
            internal_static_scope_CookieSettings_descriptor = getDescriptor().getMessageTypes().get(
                4);
            internal_static_scope_CookieSettings_fieldAccessorTable =
                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                    internal_static_scope_CookieSettings_descriptor,
                    new java.lang.String[]{"MaxCookies", "MaxCookiesPerDomain",
                                           "MaxCookieLength",},
                    com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings.class,
                    com.opera.core.systems.scope.protos.CookieMngProtos.CookieSettings.Builder.class);
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
        descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[]{}, assigner);
  }

  public static void internalForceInit() {
  }

  // @@protoc_insertion_point(outer_class_scope)
}

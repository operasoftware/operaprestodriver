// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: console_logger.proto

package com.opera.core.systems.scope.protos;

public final class ConsoleLoggerProtos {

  private ConsoleLoggerProtos() {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }

  public static final class ConsoleMessage extends
                                           com.google.protobuf.GeneratedMessage {

    // Use ConsoleMessage.newBuilder() to construct.
    private ConsoleMessage() {
      initFields();
    }

    private ConsoleMessage(boolean noInit) {
    }

    private static final ConsoleMessage defaultInstance;

    public static ConsoleMessage getDefaultInstance() {
      return defaultInstance;
    }

    public ConsoleMessage getDefaultInstanceForType() {
      return defaultInstance;
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.opera.core.systems.scope.protos.ConsoleLoggerProtos.internal_static_scope_ConsoleMessage_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
      return com.opera.core.systems.scope.protos.ConsoleLoggerProtos.internal_static_scope_ConsoleMessage_fieldAccessorTable;
    }

    // required uint32 windowID = 1;
    public static final int WINDOWID_FIELD_NUMBER = 1;
    private boolean hasWindowID;
    private int windowID_ = 0;

    public boolean hasWindowID() {
      return hasWindowID;
    }

    public int getWindowID() {
      return windowID_;
    }

    // required uint32 time = 2;
    public static final int TIME_FIELD_NUMBER = 2;
    private boolean hasTime;
    private int time_ = 0;

    public boolean hasTime() {
      return hasTime;
    }

    public int getTime() {
      return time_;
    }

    // required string description = 3;
    public static final int DESCRIPTION_FIELD_NUMBER = 3;
    private boolean hasDescription;
    private java.lang.String description_ = "";

    public boolean hasDescription() {
      return hasDescription;
    }

    public java.lang.String getDescription() {
      return description_;
    }

    // optional string uri = 4;
    public static final int URI_FIELD_NUMBER = 4;
    private boolean hasUri;
    private java.lang.String uri_ = "";

    public boolean hasUri() {
      return hasUri;
    }

    public java.lang.String getUri() {
      return uri_;
    }

    // optional string context = 5;
    public static final int CONTEXT_FIELD_NUMBER = 5;
    private boolean hasContext;
    private java.lang.String context_ = "";

    public boolean hasContext() {
      return hasContext;
    }

    public java.lang.String getContext() {
      return context_;
    }

    // optional string source = 6;
    public static final int SOURCE_FIELD_NUMBER = 6;
    private boolean hasSource;
    private java.lang.String source_ = "";

    public boolean hasSource() {
      return hasSource;
    }

    public java.lang.String getSource() {
      return source_;
    }

    // optional string severity = 7;
    public static final int SEVERITY_FIELD_NUMBER = 7;
    private boolean hasSeverity;
    private java.lang.String severity_ = "";

    public boolean hasSeverity() {
      return hasSeverity;
    }

    public java.lang.String getSeverity() {
      return severity_;
    }

    private void initFields() {
    }

    public final boolean isInitialized() {
      if (!hasWindowID) {
        return false;
      }
      if (!hasTime) {
        return false;
      }
      if (!hasDescription) {
        return false;
      }
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      getSerializedSize();
      if (hasWindowID()) {
        output.writeUInt32(1, getWindowID());
      }
      if (hasTime()) {
        output.writeUInt32(2, getTime());
      }
      if (hasDescription()) {
        output.writeString(3, getDescription());
      }
      if (hasUri()) {
        output.writeString(4, getUri());
      }
      if (hasContext()) {
        output.writeString(5, getContext());
      }
      if (hasSource()) {
        output.writeString(6, getSource());
      }
      if (hasSeverity()) {
        output.writeString(7, getSeverity());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) {
        return size;
      }

      size = 0;
      if (hasWindowID()) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(1,
                                                                        getWindowID());
      }
      if (hasTime()) {
        size += com.google.protobuf.CodedOutputStream.computeUInt32Size(2,
                                                                        getTime());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(3,
                                                                        getDescription());
      }
      if (hasUri()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(4,
                                                                        getUri());
      }
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(5,
                                                                        getContext());
      }
      if (hasSource()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(6,
                                                                        getSource());
      }
      if (hasSeverity()) {
        size += com.google.protobuf.CodedOutputStream.computeStringSize(7,
                                                                        getSeverity());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        byte[] data) throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        java.io.InputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseDelimitedFrom(
        java.io.InputStream input) throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        com.google.protobuf.CodedInputStream input) throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }

    public static com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry).buildParsed();
    }

    public static Builder newBuilder() {
      return Builder.create();
    }

    public Builder newBuilderForType() {
      return newBuilder();
    }

    public static Builder newBuilder(
        com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }

    public Builder toBuilder() {
      return newBuilder(this);
    }

    public static final class Builder extends
                                      com.google.protobuf.GeneratedMessage.Builder<Builder> {

      private com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage result;

      // Construct using
      // com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage.newBuilder()
      private Builder() {
      }

      private static Builder create() {
        Builder builder = new Builder();
        builder.result =
            new com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage();
        return builder;
      }

      protected com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage internalGetResult() {
        return result;
      }

      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException("Cannot call clear() after build().");
        }
        result = new com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(result);
      }

      public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
        return com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage
            .getDescriptor();
      }

      public com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage getDefaultInstanceForType() {
        return com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage
            .getDefaultInstance();
      }

      public boolean isInitialized() {
        return result.isInitialized();
      }

      public com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }

      private com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }

      public com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
              "build() has already been called on this Builder.");
        }
        com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage returnMe = result;
        result = null;
        return returnMe;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage) {
          return mergeFrom(
              (com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage) other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(
          com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage other) {
        if (other == com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage
            .getDefaultInstance()) {
          return this;
        }
        if (other.hasWindowID()) {
          setWindowID(other.getWindowID());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasUri()) {
          setUri(other.getUri());
        }
        if (other.hasContext()) {
          setContext(other.getContext());
        }
        if (other.hasSource()) {
          setSource(other.getSource());
        }
        if (other.hasSeverity()) {
          setSeverity(other.getSeverity());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                               com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder
            unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder(this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setWindowID(input.readUInt32());
              break;
            }
            case 16: {
              setTime(input.readUInt32());
              break;
            }
            case 26: {
              setDescription(input.readString());
              break;
            }
            case 34: {
              setUri(input.readString());
              break;
            }
            case 42: {
              setContext(input.readString());
              break;
            }
            case 50: {
              setSource(input.readString());
              break;
            }
            case 58: {
              setSeverity(input.readString());
              break;
            }
          }
        }
      }

      // required uint32 windowID = 1;
      public boolean hasWindowID() {
        return result.hasWindowID();
      }

      public int getWindowID() {
        return result.getWindowID();
      }

      public Builder setWindowID(int value) {
        result.hasWindowID = true;
        result.windowID_ = value;
        return this;
      }

      public Builder clearWindowID() {
        result.hasWindowID = false;
        result.windowID_ = 0;
        return this;
      }

      // required uint32 time = 2;
      public boolean hasTime() {
        return result.hasTime();
      }

      public int getTime() {
        return result.getTime();
      }

      public Builder setTime(int value) {
        result.hasTime = true;
        result.time_ = value;
        return this;
      }

      public Builder clearTime() {
        result.hasTime = false;
        result.time_ = 0;
        return this;
      }

      // required string description = 3;
      public boolean hasDescription() {
        return result.hasDescription();
      }

      public java.lang.String getDescription() {
        return result.getDescription();
      }

      public Builder setDescription(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }

      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }

      // optional string uri = 4;
      public boolean hasUri() {
        return result.hasUri();
      }

      public java.lang.String getUri() {
        return result.getUri();
      }

      public Builder setUri(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasUri = true;
        result.uri_ = value;
        return this;
      }

      public Builder clearUri() {
        result.hasUri = false;
        result.uri_ = getDefaultInstance().getUri();
        return this;
      }

      // optional string context = 5;
      public boolean hasContext() {
        return result.hasContext();
      }

      public java.lang.String getContext() {
        return result.getContext();
      }

      public Builder setContext(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasContext = true;
        result.context_ = value;
        return this;
      }

      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = getDefaultInstance().getContext();
        return this;
      }

      // optional string source = 6;
      public boolean hasSource() {
        return result.hasSource();
      }

      public java.lang.String getSource() {
        return result.getSource();
      }

      public Builder setSource(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSource = true;
        result.source_ = value;
        return this;
      }

      public Builder clearSource() {
        result.hasSource = false;
        result.source_ = getDefaultInstance().getSource();
        return this;
      }

      // optional string severity = 7;
      public boolean hasSeverity() {
        return result.hasSeverity();
      }

      public java.lang.String getSeverity() {
        return result.getSeverity();
      }

      public Builder setSeverity(java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasSeverity = true;
        result.severity_ = value;
        return this;
      }

      public Builder clearSeverity() {
        result.hasSeverity = false;
        result.severity_ = getDefaultInstance().getSeverity();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:scope.ConsoleMessage)
    }

    static {
      defaultInstance = new ConsoleMessage(true);
      com.opera.core.systems.scope.protos.ConsoleLoggerProtos.internalForceInit();
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:scope.ConsoleMessage)
  }

  private static
  com.google.protobuf.Descriptors.Descriptor
      internal_static_scope_ConsoleMessage_descriptor;
  private static
  com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_scope_ConsoleMessage_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[]
        descriptorData =
        {"\n\024console_logger.proto\022\005scope\"\205\001\n\016Consol"
         + "eMessage\022\020\n\010windowID\030\001 \002(\r\022\014\n\004time\030\002 \002(\r"
         + "\022\023\n\013description\030\003 \002(\t\022\013\n\003uri\030\004 \001(\t\022\017\n\007co"
         + "ntext\030\005 \001(\t\022\016\n\006source\030\006 \001(\t\022\020\n\010severity\030"
         + "\007 \001(\tB<\n#com.opera.core.systems.scope.pr"
         + "otosB\023ConsoleLoggerProtosH\001"};
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner
        assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            internal_static_scope_ConsoleMessage_descriptor = getDescriptor().getMessageTypes().get(
                0);
            internal_static_scope_ConsoleMessage_fieldAccessorTable =
                new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                    internal_static_scope_ConsoleMessage_descriptor,
                    new java.lang.String[]{"WindowID", "Time", "Description", "Uri",
                                           "Context", "Source", "Severity",},
                    com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage.class,
                    com.opera.core.systems.scope.protos.ConsoleLoggerProtos.ConsoleMessage.Builder.class);
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
        descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[]{}, assigner);
  }

  public static void internalForceInit() {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
